// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Peep.API.Persistence;

namespace Peep.API.Persistence.Migrations
{
    [DbContext(typeof(PeepApiContext))]
    partial class PeepApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Peep.API.Models.Entities.CompletedJob", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CompletionReason")
                        .HasColumnType("integer");

                    b.Property<int>("CrawlCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCompleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateQueued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<string>("JobJson")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompletedJobs");
                });

            modelBuilder.Entity("Peep.API.Models.Entities.CompletedJobData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompletedJobId")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompletedJobId");

                    b.ToTable("CompletedJobData");
                });

            modelBuilder.Entity("Peep.API.Models.Entities.QueuedJob", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateQueued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("JobJson")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("QueuedJobs");
                });

            modelBuilder.Entity("Peep.API.Models.Entities.RunningJob", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CrawlCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateQueued")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<string>("JobJson")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RunningJobs");
                });

            modelBuilder.Entity("Peep.API.Models.Entities.CompletedJobData", b =>
                {
                    b.HasOne("Peep.API.Models.Entities.CompletedJob", "CompletedJob")
                        .WithMany("CompletedJobData")
                        .HasForeignKey("CompletedJobId");
                });
#pragma warning restore 612, 618
        }
    }
}
